//
//  MenuControlView.m
//  ZXCXBlyt
//
//  Created by zly on 12-4-25.
//  Copyright (c) 2012å¹´ __MyCompanyName__. All rights reserved.
//

#import "MenuControlView.h"

#define CLICK_ON_BUTTON(xx_button) {\
[xx_button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];\
[xx_button setTitleShadowColor:RGBCOLOR(80, 80, 80) forState:UIControlStateNormal];\
[[xx_button titleLabel] setShadowOffset:CGSizeMake(0, 1)];}

#define RESTORE_BUTTON(xx_button) {\
[xx_button setTitleColor:RGBCOLOR(125, 125, 125) forState:UIControlStateNormal];\
[xx_button setTitleShadowColor:RGBCOLOR(240, 240, 240) forState:UIControlStateNormal];\
[[xx_button titleLabel] setShadowOffset:CGSizeMake(0, 1)];}

@implementation MenuControlView

@synthesize buttonsArray;
@synthesize bgSlideView;
@synthesize currentIndex;
@synthesize delegate;

- (id)initWithItemsArray:(NSArray *)array
{
    self = [super initWithFrame:CGRectMake(0, 0, 320, 40)];
    if (self) {
        UIImageView *imageView = [[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 40)] autorelease];
        imageView.image = [UIImage imageByName:@"icon_nav_tool"];
        [self addSubview:imageView];
        UIImage *stretch = [UIImage stretchableImage:@"icon_bg_slide" leftCap:27 topCap:0];
        self.bgSlideView = [[[UIImageView alloc] initWithImage:stretch] autorelease];
        [self addSubview:self.bgSlideView];
        
        self.buttonsArray = [NSMutableArray array];
        NSInteger arrayCount = [array count];
        for (int i = 0; i < arrayCount; i++) {
            UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
            [button setTitle:[array objectAtIndex:i] forState:UIControlStateNormal];
            button.adjustsImageWhenHighlighted = NO;
            button.showsTouchWhenHighlighted = YES;
            button.tag = i;
            [[button titleLabel] setFont:[UIFont boldSystemFontOfSize:16]];
            [button setTitleColor:RGBCOLOR(90, 90, 90) forState:UIControlStateNormal];
            [button setTitleShadowColor:[UIColor whiteColor] forState:UIControlStateNormal];
            [[button titleLabel] setShadowOffset:CGSizeMake(0, 1)];
            [button addTarget:self action:@selector(buttonOnClick:) forControlEvents:UIControlEventTouchUpInside];
            CGFloat width = 320.0/arrayCount;
            button.frame = CGRectMake(i*320.0/arrayCount, 0, width, 40);
            [self addSubview:button];
            [self.buttonsArray addObject:button];
            if (i == 0) {
                self.bgSlideView.frame = CGRectMake(button.frame.origin.x, 0, button.frame.size.width, 39) ;
            }
        }
        [self updateMenuButtonState];
    }
    return self;
}

- (void)updateMenuButtonState {
    for (UIButton *button in self.buttonsArray) {
        RESTORE_BUTTON(button);
    }
    
    UIButton *button = (UIButton *)[self.buttonsArray objectAtIndex:currentIndex];
    CLICK_ON_BUTTON(button);
}


- (void)buttonOnClick:(UIButton *)button {
    NSInteger index = [button tag];
    if (index != currentIndex) {
        [self slideBgToIndex:index];
        if ([delegate respondsToSelector:@selector(menu:clickedAtIndex:)]) {
            [delegate menu:self clickedAtIndex:currentIndex];
        }
    }
}

- (void)slideBgToIndex:(NSInteger)index {
    currentIndex = index;
    UIButton *button = (UIButton *)[self.buttonsArray objectAtIndex:currentIndex];
    [UIView animateWithDuration:0.3 animations:^{
        self.bgSlideView.center = CGPointMake(button.center.x, self.bgSlideView.center.y);
    }];
    [self updateMenuButtonState];
}

- (void)dealloc
{
    self.bgSlideView = nil;
    [super dealloc];
}

@end
