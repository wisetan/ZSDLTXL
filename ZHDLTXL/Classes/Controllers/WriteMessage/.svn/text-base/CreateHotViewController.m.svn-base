//
//  CreateHotViewController.m
//  ZXCXBlyt
//
//  Created by zly on 12-3-21.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "CreateHotViewController.h"
#import "PHTextView.h"
#import "UIActionSheet+MKBlockAdditions.h"
#import "UIImage+Resizing.h"

@interface CreateHotViewController ()
-(UIImage *)postProcessImage:(UIImage *)_capturedImage width:(float)width;
@end

#define kOperationBarHeight 40

@implementation CreateHotViewController
@synthesize operationView;
@synthesize delegate;
@synthesize clearButton;
@synthesize mTextView;
@synthesize photoButton;
@synthesize photoImageView;
//@synthesize pickedPhotoImage;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
    }
    return self;
}

- (void)dealloc {
//    NSLog(@"****is main : %d", [NSThread isMainThread]);
    if (mTextView) {
        if (![NSThread isMainThread]) {
            [self performSelectorOnMainThread:@selector(releaseOnMain)
                                   withObject:nil
                                waitUntilDone:YES];
        } else {
            [self releaseOnMain];
        }    
    }
}

- (void)releaseOnMain {
//    NSLog(@"clear Button : %@", mTextView);    
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    self.clearButton = nil;
    self.operationView = nil;        
    self.photoButton = nil;
    self.photoImageView = nil;
    self.mTextView.delegate = nil;
    self.mTextView = nil;
    [super dealloc];
    
}


- (void)changeTextViewToFitKeySize:(CGSize)keyboardSize {
    [UIView animateWithDuration:0.1 animations:^{
        mTextView.frame = CGRectMake(0, 0, 320, 460-44-keyboardSize.height-kOperationBarHeight);
        operationView.frame = CGRectMake(0, mTextView.frame.size.height, 320, kOperationBarHeight);
    }];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.title = @"新建动态";
    if ([kAppDelegate pickedPhotoImage]) {
        self.photoButton.alpha = 1;
        self.photoImageView.alpha = 1;
        self.photoImageView.image = [kAppDelegate pickedPhotoImage];
        [Utility addRoundCornerToView:self.photoImageView];
    } else {
        self.photoButton.alpha = 0;
        self.photoImageView.alpha = 0;
    }
    
    mTextView.placeholder = @"请输入动态信息……";
    mTextView.placeholderColor = [UIColor darkGrayColor];
    [self.mTextView becomeFirstResponder];

    [self initNavigationBar];
    [Utility addShadow:self.navigationController.navigationBar];
    [Utility addShadowUp:self.operationView];
    
    mTextView.text = [kAppDelegate hotspotContent];
    [kAppDelegate setHotspotContent:nil];
}

- (void)initNavigationBar {    
    //right item
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake(0, 0, 40, 40);
    [button addTarget:self action:@selector(sendAction) forControlEvents:UIControlEventTouchUpInside];
    button.showsTouchWhenHighlighted = YES;
    [button setImage:[UIImage imageByName:@"icon_msg_send"] forState:UIControlStateNormal];
    UIBarButtonItem *button1 = [[[UIBarButtonItem alloc] initWithCustomView:button] autorelease];
    self.navigationItem.rightBarButtonItem = button1;
  
    //left item
    button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake(0, 0, 40, 40);
    [button addTarget:self action:@selector(backAction) forControlEvents:UIControlEventTouchUpInside];
    button.showsTouchWhenHighlighted = YES;
    [button setImage:[UIImage imageByName:@"icon_nav_back"] forState:UIControlStateNormal];
    button1 = [[[UIBarButtonItem alloc] initWithCustomView:button] autorelease];
    self.navigationItem.leftBarButtonItem = button1;
}


- (void)keyboardWillShow:(NSNotification *)notification
{
    NSDictionary *info = [notification userInfo];
    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
    [self changeTextViewToFitKeySize:kbSize];
}

- (void)backAction {
    [kAppDelegate setHotspotContent:nil];
    [kAppDelegate setPickedPhotoImage:nil];
    [self dismissModalViewControllerAnimated:YES];
}

- (void)viewDidUnload
{
//    NSLog(@"view did unload !!");
    [self setMTextView:nil];
    [self setClearButton:nil];
    [self setOperationView:nil];
    [self setPhotoButton:nil];
    [self setPhotoImageView:nil];
    [super viewDidUnload];
}

- (IBAction)photoAction:(id)sender {
    NSArray *array = nil;
    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
        array = [NSArray arrayWithObjects:@"拍照", @"用户相册", nil];
    } else {
        array = [NSArray arrayWithObjects:@"用户相册", nil];
    }
    
    [UIActionSheet actionSheetWithTitle:@"请选择图片来源" 
                                message:nil 
                                buttons:array 
                             showInView:self.view 
                              onDismiss:^(int buttonIndex) {
                                  [[kAppDelegate leveyTabBarController] hidesTabBar:YES animated:YES];
                                  //保存content
                                  if (mTextView.text && [mTextView.text length] > 0) {
                                      [kAppDelegate setHotspotContent:mTextView.text];
                                  }
                                  [kAppDelegate setPickedPhotoImage:nil];
                                  UIImagePickerController *imagePicker = [[[UIImagePickerController alloc] init] autorelease];
                                  imagePicker.allowsEditing = YES;
                                  imagePicker.delegate = self;
                                  if ([[array objectAtIndex:buttonIndex] isEqualToString:@"拍照"]) {
                                      imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
                                  } else {
                                      imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
                                  }
                                  [self presentModalViewController:imagePicker animated:YES];
                              }
                               onCancel:^{
                                   
                               }];
    
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [[kAppDelegate leveyTabBarController] hidesTabBar:NO animated:YES];
    [self dismissModalViewControllerAnimated:YES];
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {
    UIImage *pickedImage = [info objectForKey:UIImagePickerControllerEditedImage];
    if (pickedImage == nil) {
        pickedImage = [info objectForKey:UIImagePickerControllerOriginalImage];
    }
    
    if (pickedImage) {
        UIImage *scaledImage = [self postProcessImage:pickedImage width:kDefaultIamgeScale];
        [self.photoImageView setImage:scaledImage];
        [kAppDelegate setPickedPhotoImage:scaledImage];
    }
    
//    NSLog(@"Ready to send photo!!!");
    self.photoButton.alpha = 1;
    self.photoImageView.alpha = 1;
    [Utility addRoundCornerToView:self.photoImageView];
    [self dismissModalViewControllerAnimated:YES];
    
    [[kAppDelegate leveyTabBarController] hidesTabBar:NO animated:YES];
}

-(UIImage *)postProcessImage:(UIImage *)_capturedImage width:(float)width
{
	UIImageOrientation orient = _capturedImage.imageOrientation;
	CGSize newSize;
	if (orient == UIImageOrientationRight || orient == UIImageOrientationLeft) 
	{
		float ratio = _capturedImage.size.height/_capturedImage.size.width;
		if( ratio > 1 )
			newSize = CGSizeMake(width, width*ratio);
		else 
			newSize = CGSizeMake(width/ratio, width);
	}
	else 
	{
		float ratio = _capturedImage.size.width/_capturedImage.size.height;
		if( ratio > 1 )
			newSize = CGSizeMake(width*ratio, width);
		else 
			newSize = CGSizeMake(width, width/ratio);
	}	
	
	UIImage *newImg = [UIImage imageWithSize:_capturedImage scaledToSize:newSize];
    UIImage *scaledImage = [newImg cropToSize:CGSizeMake(width, width) usingMode:NYXCropModeCenter];
    
    return scaledImage;
}


- (IBAction)clearAction:(id)sender {
    [UIActionSheet actionSheetWithTitle:nil
                                message:nil 
                                buttons:[NSArray arrayWithObjects:@"确认清除文字", nil] 
                             showInView:self.view 
                              onDismiss:^(int buttonIndex) {
                                  self.mTextView.text = @"";
                              } 
                               onCancel:^{
                                   
                               }];
}

/*
- (void)sendAction {
    
    GPoint currentLocation = [kAppDelegate lastLocation];
    
    for (int i = 0; i < 100; i++) {
        NSMutableDictionary *dict = [NSMutableDictionary dictionary];
        currentLocation.lat -= 0.001;
        currentLocation.lon -= 0.001;
        NSString *lat = [NSString stringWithFormat:@"%f", currentLocation.lat];
        NSString *lon = [NSString stringWithFormat:@"%f", currentLocation.lon];
        
        [dict setObject:lat forKey:@"lat"];
        [dict setObject:lon forKey:@"lon"];
        
        NSLog(@"lat : %@", lat);
        NSLog(@"lon : %@", lon);
        
        if (self.mTextView.text && [[self.mTextView.text removeSpaceAndNewLine] length] > 0) {
            [dict setObject:self.mTextView.text forKey:@"content"];
        }
        
        [dict setObject:@"addHotspot.json" forKey:@"path"];
        
        UIImage *dataImage = nil;
        if (i % 2 == 0) {
            dataImage = [UIImage imageByName:@"test1"];
        } else {
            dataImage = [UIImage imageByName:@"test2"];
        }
        
        [DreamFactoryClient postWithParameters:dict image:dataImage success:^(id response) {
            NSLog(@"response  : %@", response);
            if ([[[(NSDictionary *)response objForKey:@"returnCode"] stringValue] isEqualToString:@"0"]) {
                [kAppDelegate showWithCustomAlertViewWithText:@"发送热点成功" andImageName:nil];
            }
        } failure:^{
            NSLog(@"failed !!");
        }];
        
    }
}
*/

- (void)sendAction {    
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    NSString *lat = [kAppDelegate lastLat];
    NSString *lon = [kAppDelegate lastLon];
    [dict setObject:lat forKey:@"lat"];
    [dict setObject:lon forKey:@"lon"];
    
    if (self.mTextView.text && [[self.mTextView.text removeSpaceAndNewLine] length] > 0) {
        [dict setObject:self.mTextView.text forKey:@"content"];
        
        [dict setObject:@"addHotspot.json" forKey:@"path"];
        
        UIImage *dataImage = [kAppDelegate pickedPhotoImage];
        [kAppDelegate showStatusWithMessage:@"正在发送…"];
        [DreamFactoryClient postWithParameters:dict image:dataImage success:^(id response) {
//            NSLog(@"send thread! thread ");
            if ([[[(NSDictionary *)response objForKey:@"returnCode"] stringValue] isEqualToString:@"0"]) {
                [kAppDelegate showWithCustomAlertViewWithText:@"发送动态成功" andImageName:nil];
                [kAppDelegate setPickedPhotoImage:nil];
                if ([delegate respondsToSelector:@selector(hotSpotDidFinishCreated)]) {
                    [delegate hotSpotDidFinishCreated];
                }
                
                [kAppDelegate showStatusFinishMessage:@"发送成功"];
            } else {
                [kAppDelegate showWithCustomAlertViewWithText:GET_RETURNMESSAGE(response) andImageName:nil];
                [kAppDelegate showStatusFinishMessage:@"发送失败"];
            }
        } failure:^{
            [kAppDelegate showWithCustomAlertViewWithText:kNetworkError andImageName:kErrorIcon];
            [kAppDelegate showStatusFinishMessage:@"发送失败"];
        }];
        [self backAction];
    }
}

- (void)showSendSuccess {
    [kAppDelegate showStatusFinishMessage:@"发送成功"];
}

- (void)showSendFailed {
    [kAppDelegate showStatusFinishMessage:@"发送失败"];
}

- (IBAction)clearPhotoAction:(id)sender {
    [UIActionSheet actionSheetWithTitle:nil
                                message:nil 
                                buttons:[NSArray arrayWithObjects:@"确认删除照片", nil] 
                             showInView:self.view 
                              onDismiss:^(int buttonIndex) {
                                  [UIView animateWithDuration:0.1 animations:^{
                                      self.photoButton.alpha    = 0;
                                      self.photoImageView.alpha = 0;
                                  }];
                                  [kAppDelegate setPickedPhotoImage:nil];
                              } 
                               onCancel:^{
                                   
                               }];
}

@end
